)
mean_rt_table
?acros()
?across()
?across()
mean_rt_table <- probtask %>%
group_by(condition) %>%
summarise(
across(c(rt, correct), ~ mean(.x, na.rm = TRUE),
.names = "mean_{.col}")
)
mean_rt_table
# table w/o across()
mean_rt_table_2 <- probtask %>%
group_by(condition) %>%
summarise(
mean_rt = mean(rt, na.rm = TRUE),
accuracy = mean(correct, na.rm = TRUE)
)
mean_rt_table_2
library(tidyverse)
list_files <- list.files(path = "/jumping_data_parker",
pattern = "*.csv",
full.names = TRUE)
map()
list_files <- list.files(path = "jumping_data_parker/",
pattern = "*.csv",
full.names = TRUE)
map()
list_files
files <- list.files(path = "jumping_data_parker/",
pattern = "*.csv",
full.names = TRUE)
list_files
library(tidyverse)
files <- list.files(path = "jumping_data_parker/",
pattern = "*.csv",
full.names = TRUE)
list_files
files <- list.files(path = "jumping_data_parker/",
pattern = "*.csv",
full.names = TRUE)
files
raw_data <- map(files, read_csv)
raw_data[[1]]
raw_data[[1]] %>%
mutate(sex = case_when(sex == FALSE ~ "F",
sex == "M" ~ "M"))
convert_false <- function(file) {
file <- file %>%
mutate(sex = case_when(sex == FALSE ~ "F",
sex == "M" ~ "M"))
}
raw_data <- map(files, read_csv) %>%
map(convert_false) %>%
bind_rows()
convert_columns <- function(file) {
file <- file %>%
mutate(sex = case_when(sex == FALSE ~ "F",
sex == "M" ~ "M"),
data = as.character(date))
}
raw_data <- map(files, read_csv) %>%
map(convert_columns) %>%
bind_rows()
library(tidyverse)
files <- list.files(path = "jumping_data_parker/",
pattern = "*.csv",
full.names = TRUE)
files
convert_columns <- function(file) {
file <- file %>%
mutate(sex = case_when(sex == FALSE ~ "F",
sex == "M" ~ "M"),
data = as.character(date))
}
raw_data <- map(files, read_csv) %>%
map(convert_columns) %>%
bind_rows()
convert_columns <- function(file) {
file <- file %>%
mutate(sex = case_when(sex == FALSE ~ "F",
sex == "M" ~ "M"),
date = as.character(date))
}
library(tidyverse)
files <- list.files(path = "jumping_data_parker/",
pattern = "*.csv",
full.names = TRUE)
files
convert_columns <- function(file) {
file <- file %>%
mutate(sex = case_when(sex == FALSE ~ "F",
sex == "M" ~ "M"),
date = as.character(date))
}
raw_data <- map(files, read_csv) %>%
map(convert_columns) %>%
bind_rows()
View(raw_data)
head(raw_data)
raw_data %>%
distinct(condition)
raw_data %>%
distinct(sex)
raw_data %>%
distinct(condition)
raw_data %>%
distinct(laser_trial)
summary_data <- raw_data %>%
group_by(subject, distance) %>%
summarise(succ_rate = sum(outcome == 1/n()))
summary_data %>%
ggplot(aes(x = succ_rate)) +
geom_histogram()
summary_data <- raw_data %>%
group_by(subject, distance) %>%
summarise(succ_rate = sum(outcome == 1/n())
summary_data <- raw_data %>%
group_by(subject, distance) %>%
summarise(succ_rate = sum(outcome == 1/n()))
View(summary_data)
summary_data <- raw_data %>%
group_by(subject, distance) %>%
summarise(succ_rate = sum(outcome == 1)/n())
summary_data %>%
ggplot(aes(x = succ_rate)) +
geom_histogram()
View(summary_data)
summary_data %>%
ggplot(aes(x = distance,
y = succ_rate,
group = subject)) +
geom_line() +
ylim(0, 1)
raw_data %>%
group_by(subject, distance) %>%
mutate(succ_rate_NOabort = sum(outcome == 1)/(n() - sum(outcome == 2)))
raw_data %>%
group_by(subject, distance) %>%
# filter(outcome == 1 | outcome == 0)
# filter(outcome != 2)
filter(outcome %in% c(0, 1)) %>%
summarise(succ_rate = sum(outcome == 1)/n()) %>%
ggplot(aes(x = distance,
y = succ_rate,
group = subject)) +
geom_line() +
ylim(0, 1)
library(tidyverse)
help("tidyverse")
library(dplyr)
getwd()
match_trials <- read_csv("tidy_data/MFIndD_analogy.csv")
glimpse(match_trials)
people <- match_trials %>%
distinct(qualtrics_id) %>%
nrow()
people
trial_counts <- match_trials %>%
count(qualtrics_id) %>%
pull(n) %>%
n_distinct()
trial_counts == 1
summary_match_trials <- match_trials %>%
group_by(qualtrics_id) %>%
summarize(relational_match_count = sum(response_type == "Rel"))
head(summary_match_trials)
summary_match_trials %>%
ggplot(aes(x = relational_match_count)) +
geom_histogram(bindwidth = 1,
color = "black", fill = "lightblue") +
labs(x = "# of Relational Matches Selected",
y = "# of Participants",
title = "Relational Matches Selected by Participants")
reshaped_match_trials <- match_trials %>%
select(qualtrics_id,
trial_number,
response_type) %>%
pivot_wider(names_from = trial_number,
values_from = response_type,
names_prefix = "trial") %>%
drop_na
head(reshaped_match_trials)
rei_data <- read_csv("tidy_data/MFIndD_REI.csv")
head(rei_data)
rei_data <- rei_data %>%
mutate(numeric_response = case_when(
response == "Strongly Disagree" ~ 1,
response == "Strongly Agree" ~ 5,
!is.na(as.numeric(response)) ~ as.numeric(response),
TRUE ~ NA_real_
))
head(rei_data)
rei_data %>%
distinct(response)
rei_data <- rei_data %>%
mutate(new_scored_response = if_else(!is.na(rev_scoring),
6 - numeric_response,
numeric_response))
head(rei_data)
comparison <- rei_data %>%
filter(new_scored_response != scored_response)
print(comparison)
rei_data <- rei_data %>%
mutate(new_scored_response = ifelse(rev_scoring == "neg", 6 - new_scored_response, new_scored_response))
rei_summary <- rei_data %>%
group_by(qualtrics_id, sub_type) %>%
summarize(score = sum(new_scored_response, na.rm = TRUE), .groups = 'drop')
print(rei_summary)
rei_na_scores <- rei_summary %>%
filter(is.na(score))
print(rei_na_scores)
combined_summary <- rei_summary %>%
left_join(summary_match_trials, by = "qualtrics_id")
print(combined_summary)
ggplot(combined_summary, aes(x = score, y = relational_match_count, color = sub_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "REI Score",
y = "Analogy Score",
title = "REI vs. Analogy Scores by Sub-Type") +
theme_minimal() +
theme(axis.title.x = element_text(color = "blue", size = 12),
axis.title.y = element_text(color = "blue", size = 12))
probtask <- read_csv("tidy_data/MFIndD_probtask.csv")
condition <- distinct(probtask$condition)
condition <- unqiue(probtask$condition)
condition <- unique(probtask$condition)
print(condition)
mean_rt <- numeric(length(condition))
for (i in seq_along(condition)) {
mean_rt[i] <- mean(probtask$rt[probtask$condition], na.rm = TRUE)
}
# table w/ across()
?across()
mean_rt_table <- probtask %>%
group_by(condition) %>%
summarise(
across(c(rt, correct), ~ mean(.x, na.rm = TRUE),
.names = "mean_{.col}")
)
mean_rt_table
# table w/o across()
mean_rt_table_2 <- probtask %>%
group_by(condition) %>%
summarise(
mean_rt = mean(rt, na.rm = TRUE),
accuracy = mean(correct, na.rm = TRUE)
)
mean_rt_table_2
probtask %>%
group_by(condition) %>%
summarise(across(c(rt, correct), mean)) %>%
pivot_longer(c(rt, correct)) %>%
ggplot(aes(y = value, x = condition)) +
geom_point(color = "red") +
facet_wrap(~name, scales = "free")
accuracy_sum <- probtask %>%
group_by(SubID, condition) %>%
summarise(prop_corr = mean(correct, na.rm = TRUE)) %>%
group_by(condition) %>%
summarise(mean_prop_corr = mean(prop_corr, na.rm = TRUE))
accuracy_sum <- probtask %>%
group_by(SubID, condition) %>%
summarise(prop_corr = mean(correct, na.rm = TRUE)) %>%
group_by(condition) %>%
summarise(mean_prop_corr = mean(prop_corr, na.rm = TRUE))
accuracy_sum
accuracy_plot <- accuracy_sum %>%
ggplot(aes(x = condition, y = mean_prop_corr)) +
geom_point(color = "blue") +
labs(title = "Mean Proportion of Correct Responses by Condition",
x = "Condition", y = "Mean Proportion Correct")
accuracy_plot
library(tidyverse)
install.packages("ggdist")
library(ggdist)
install.packages("ggdist")
install.packages("ggdist")
install.packages("ggdist")
library(tidyverse)
library(tidyverse)
install.packages("ggdist")
library(ggdist)
library(tidyverse)
install.packages("ggdist")
library(ggdist)
help("tidyverse")
library(dplyr)
getwd()
match_trials <- read_csv("tidy_data/MFIndD_analogy.csv")
glimpse(match_trials)
people <- match_trials %>%
distinct(qualtrics_id) %>%
nrow()
people
trial_counts <- match_trials %>%
count(qualtrics_id) %>%
pull(n) %>%
n_distinct()
trial_counts == 1
summary_match_trials <- match_trials %>%
group_by(qualtrics_id) %>%
summarize(relational_match_count = sum(response_type == "Rel"))
head(summary_match_trials)
summary_match_trials %>%
ggplot(aes(x = relational_match_count)) +
geom_histogram(bindwidth = 1,
color = "black", fill = "lightblue") +
labs(x = "# of Relational Matches Selected",
y = "# of Participants",
title = "Relational Matches Selected by Participants")
reshaped_match_trials <- match_trials %>%
select(qualtrics_id,
trial_number,
response_type) %>%
pivot_wider(names_from = trial_number,
values_from = response_type,
names_prefix = "trial") %>%
drop_na
head(reshaped_match_trials)
rei_data <- read_csv("tidy_data/MFIndD_REI.csv")
head(rei_data)
rei_data <- rei_data %>%
mutate(numeric_response = case_when(
response == "Strongly Disagree" ~ 1,
response == "Strongly Agree" ~ 5,
!is.na(as.numeric(response)) ~ as.numeric(response),
TRUE ~ NA_real_
))
head(rei_data)
rei_data %>%
distinct(response)
rei_data <- rei_data %>%
mutate(new_scored_response = if_else(!is.na(rev_scoring),
6 - numeric_response,
numeric_response))
head(rei_data)
comparison <- rei_data %>%
filter(new_scored_response != scored_response)
print(comparison)
rei_data <- rei_data %>%
mutate(new_scored_response = ifelse(rev_scoring == "neg", 6 - new_scored_response, new_scored_response))
rei_summary <- rei_data %>%
group_by(qualtrics_id, sub_type) %>%
summarize(score = sum(new_scored_response, na.rm = TRUE), .groups = 'drop')
print(rei_summary)
rei_na_scores <- rei_summary %>%
filter(is.na(score))
print(rei_na_scores)
combined_summary <- rei_summary %>%
left_join(summary_match_trials, by = "qualtrics_id")
print(combined_summary)
ggplot(combined_summary, aes(x = score, y = relational_match_count, color = sub_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "REI Score",
y = "Analogy Score",
title = "REI vs. Analogy Scores by Sub-Type") +
theme_minimal() +
theme(axis.title.x = element_text(color = "blue", size = 12),
axis.title.y = element_text(color = "blue", size = 12))
probtask <- read_csv("tidy_data/MFIndD_probtask.csv")
condition <- unique(probtask$condition)
print(condition)
mean_rt <- numeric(length(condition))
for (i in seq_along(condition)) {
mean_rt[i] <- mean(probtask$rt[probtask$condition], na.rm = TRUE)
}
# table w/ across()
?across()
mean_rt_table <- probtask %>%
group_by(condition) %>%
summarise(
across(c(rt, correct), ~ mean(.x, na.rm = TRUE),
.names = "mean_{.col}")
)
mean_rt_table
# table w/o across()
mean_rt_table_2 <- probtask %>%
group_by(condition) %>%
summarise(
mean_rt = mean(rt, na.rm = TRUE),
accuracy = mean(correct, na.rm = TRUE)
)
mean_rt_table_2
probtask %>%
group_by(condition) %>%
summarise(across(c(rt, correct), mean)) %>%
pivot_longer(c(rt, correct)) %>%
ggplot(aes(y = value, x = condition)) +
geom_point(color = "red") +
facet_wrap(~name, scales = "free")
accuracy_sum <- probtask %>%
group_by(SubID, condition) %>%
summarise(prop_corr = mean(correct, na.rm = TRUE)) %>%
group_by(condition) %>%
summarise(mean_prop_corr = mean(prop_corr, na.rm = TRUE))
accuracy_sum
accuracy_plot <- accuracy_sum %>%
ggplot(aes(x = condition, y = mean_prop_corr)) +
geom_point(color = "blue") +
labs(title = "Mean Proportion of Correct Responses by Condition",
x = "Condition", y = "Mean Proportion Correct")
accuracy_plot
install.packages("ggdist")
dist_plot <- accuracy_sum %>%
ggplot(aes(x = condition, y = mean_prop_corr)) +
stat_dotsinterval(aes(y = mean_prop_corr), color = "darkblue") +
labs(title = "Proportion Correct Responses w/ Distributional Info.",
x = "Condition", y = "Mean Proportion Correct")
dist_plot
dist_plot <- accuracy_sum %>%
ggplot(aes(x = condition, y = mean_prop_corr)) +
stat_dotsinterval(aes(y = mean_prop_corr),
color = "darkblue", # consistent color for interval points
slab_fill = "lightblue" # show soft contrast in slab,
dotsize = 0.6) + # adjusting dot size
dist_plot <- accuracy_sum %>%
ggplot(aes(x = condition, y = mean_prop_corr)) +
stat_dotsinterval(aes(y = mean_prop_corr),
color = "darkblue", # consistent color for interval points
slab_fill = "lightblue", # show soft contrast in slab,
dotsize = 0.6) + # adjusting dot size
labs(title = "Proportion Correct Responses w/ Distributional Info.",
x = "Condition", y = "Mean Proportion Correct")
dist_plot
View(dist_plot)
View(probtask)
ChickWeight %>%
ggplot(aes(y = weight, x = Time, group = Chick)) +
geom_line()
View(mean_rt_table)
library(tidyverse)
install.packages("ggdist")
library(ggdist)
help("tidyverse")
library(dplyr)
getwd()
match_trials <- read_csv("tidy_data/MFIndD_analogy.csv")
glimpse(match_trials)
people <- match_trials %>%
distinct(qualtrics_id) %>%
nrow()
people
trial_counts <- match_trials %>%
count(qualtrics_id) %>%
pull(n) %>%
n_distinct()
trial_counts == 1
summary_match_trials <- match_trials %>%
group_by(qualtrics_id) %>%
summarize(relational_match_count = sum(response_type == "Rel"))
head(summary_match_trials)
summary_match_trials %>%
ggplot(aes(x = relational_match_count)) +
geom_histogram(bindwidth = 1,
color = "black", fill = "lightblue") +
labs(x = "# of Relational Matches Selected",
y = "# of Participants",
title = "Relational Matches Selected by Participants")
reshaped_match_trials <- match_trials %>%
select(qualtrics_id,
trial_number,
response_type) %>%
pivot_wider(names_from = trial_number,
values_from = response_type,
names_prefix = "trial") %>%
drop_na
head(reshaped_match_trials)
rei_data <- read_csv("tidy_data/MFIndD_REI.csv")
head(rei_data)
rei_data <- rei_data %>%
mutate(numeric_response = case_when(
response == "Strongly Disagree" ~ 1,
response == "Strongly Agree" ~ 5,
!is.na(as.numeric(response)) ~ as.numeric(response),
TRUE ~ NA_real_
))
head(rei_data)
rei_data %>%
distinct(response)
rei_data <- rei_data %>%
mutate(new_scored_response = if_else(!is.na(rev_scoring),
6 - numeric_response,
numeric_response))
head(rei_data)
comparison <- rei_data %>%
filter(new_scored_response != scored_response)
print(comparison)
rei_data <- rei_data %>%
mutate(new_scored_response = ifelse(rev_scoring == "neg", 6 - new_scored_response, new_scored_response))
rei_summary <- rei_data %>%
group_by(qualtrics_id, sub_type) %>%
summarize(score = sum(new_scored_response, na.rm = TRUE), .groups = 'drop')
print(rei_summary)
rei_na_scores <- rei_summary %>%
filter(is.na(score))
print(rei_na_scores)
combined_summary <- rei_summary %>%
left_join(summary_match_trials, by = "qualtrics_id")
print(combined_summary)
ggplot(combined_summary, aes(x = score, y = relational_match_count, color = sub_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "REI Score",
y = "Analogy Score",
title = "REI vs. Analogy Scores by Sub-Type") +
theme_minimal() +
theme(axis.title.x = element_text(color = "blue", size = 12),
axis.title.y = element_text(color = "blue", size = 12))
